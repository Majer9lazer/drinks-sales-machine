@model Persistence.Entities.Drink

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Drink</h4>
<hr />
<div class="row" id="createDrinkBlock">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Price" class="col-form-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="col-form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="col-form-label">Path</label>
                <select class="form-control" v-model="selectedImage">
                    <option v-bind:value="image" v-for="image in images" :key="image.path">{{image.path}}</option>
                </select>
            </div>
            <div class="form-group">
                <label class="col-form-label">Image</label>
                <img class="img-thumbnail" :src="selectedImage.path">
                <span asp-validation-for="Image.Path" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="ImageId" v-bind:value="selectedImage.id" />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Admin">Back to List</a>
</div>

@section Scripts
{
    <script>
        var createDrinkBlockVue = new Vue({
            el: '#createDrinkBlock',
            data: {
                images: [],
                selectedImage: {}
            },
            created: async function() {
                this.images = (await window.axios.get('/api/Images')).data;
                this.selectedImage = this.images.find(f => f.id === 5);
            }
        });
    </script>
}
