@model Services.Models.CreateMachineViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Machine</h4>
<hr />
<div class="row" id="createMachineBlock">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MachineName" class="control-label"></label>
                <input asp-for="MachineName" value="Test_@DateTime.Now.ToString("MM_dd_yyyy_hh:mm:ss")" class="form-control" />
                <span asp-validation-for="MachineName" class="text-danger"></span>
            </div>
            <div class="form-group" v-for="(addedDrink,index) in addedDrinks">
                <label class="control-label">Machine Drinks[{{index}}]</label>
                <div class="input-group">
                    <select class="form-control" v-model="addedDrink.selected" :name="'DrinkIds['+index+'].DrinkId'">
                        <option v-for="drink in addedDrink.drinks" v-bind:value="drink.id">{{drink.name}}</option>
                    </select>
                    <input class="form-control col-sm-2" type="number" v-model="addedDrink.quantity" :name="'DrinkIds['+index+'].Quantity'" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-success" v-bind:disabled="addedDrink.selected === '' || addedDrink.drinks.length <= 1"
                                type="button" v-on:click="addNewDrink(addedDrink.selected,index)">
                            +
                        </button>
                    </div>

                </div>

            </div>
            <div class="form-group">
                <label class="control-label">Machine Coins</label>
                <select id="CoinIds" name="CoinIds[]" class="form-control">
                    <option v-for="coin in coins" v-bind:value="coin.id">{{coin.name}}</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Admin">Back to List</a>
</div>

@section Scripts
{
    <script>
        var createMachineBlockVue = new Vue({
            el: '#createMachineBlock',
            data: {
                drinks: [],
                coins: [],
                selectedDrinks: [],
                selectedCoins: [],
                addedDrinks: []
            },
            created: async function () {
                this.drinks = await this.getDrinks();
                this.addedDrinks.push({ selected: '', drinks: this.drinks, quantity: 1 });
                this.coins = await this.getCoins();
            },

            methods: {
                getDrinks: async function () {
                    return (await window.axios.get('/api/drinks')).data;
                },
                getCoins: async function () {
                    return (await window.axios.get('/api/coins')).data;
                },

                addNewDrink: function (selectedDrinkId, index) {

                    var currentAddedDrink = this.addedDrinks[index];

                    var selectedDrink = currentAddedDrink.drinks.find(f => f.id === selectedDrinkId);

                    // берем новые напитки которые еще не выбрали
                    var newDrinks = currentAddedDrink.drinks.filter(f => f.id !== selectedDrinkId);

                    // удаляем все напитки кроме того, который выбрали, чтобы нельзя было пользователю перевыбрать. Защита от дурака.
                    currentAddedDrink.drinks.splice(0, currentAddedDrink.drinks.length, selectedDrink);

                    // добавляем новый элемент для выбора напитков
                    this.addedDrinks.push({ selected: '', drinks: newDrinks, quantity: 1 });
                }
            }
        });
    </script>
}

